## This file generated by InlineX::C2XS (version 0.22) using Inline::C (version 0.5)
package CBitcoin::TransactionInput;

require Exporter;
*import = \&Exporter::import;
require DynaLoader;

$CBitcoin::TransactionInput::VERSION = '0.01';

DynaLoader::bootstrap CBitcoin::TransactionInput $CBitcoin::TransactionInput::VERSION;

@CBitcoin::TransactionInput::EXPORT = ();
@CBitcoin::TransactionInput::EXPORT_OK = ();

sub dl_load_flags {0} # Prevent DynaLoader from complaining and croaking


sub new {
	my $package = shift;
	return bless({}, $package);
}

sub prevOutHash {
	my $this = shift;
	die "not correct TransactionInput type" unless ref($this) eq 'CBitcoin::TransactionInput';
	my $x = shift;
	if($x){
		# TODO: do input validation here
		$this->{prevOutHash} = $x;
		return $x;
	}
	else{
		return $this->{prevOutHash};
	}
}

sub prevOutIndex {
	my $this = shift;
	die "not correct TransactionInput type" unless ref($this) eq 'CBitcoin::TransactionInput';
	my $x = shift;
	if($x){
		# make sure that this is a positive integer
		if($x =~ m/[0-9]+/){
			$this->{prevOutIndex} = $x;
			return $x;
		}
		else{
			return undef;
		}
	}
	else{
		return $this->{prevOutIndex};
	}	
}

sub script {
	my $this = shift;
	die "not correct TransactionInput type" unless ref($this) eq 'CBitcoin::TransactionInput';
	my $x = shift;
	if($x){
		# TODO
		$this->{script} = $x;
		return $x;
	}
	else{
		return $this->{script};
	}	
}


sub sequence {
	my $this = shift;
	die "not correct TransactionInput type" unless ref($this) eq 'CBitcoin::TransactionInput';
	my $x = shift;
	if($x){
		# TODO
		$this->{sequence} = $x;
		return $x;
	}
	else{
		return $this->{sequence};
	}	
}

sub validate {
	my $this = shift;
	die "not correct TransactionInput type" unless ref($this) eq 'CBitcoin::TransactionInput';
	
	return test1($this->script(), $this->sequence(), $this->prevOutHash(),$this->prevOutIndex());
}


1;
